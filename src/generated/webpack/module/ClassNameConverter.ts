
        //Autogenerated
        /* Webpack use module name for loading and computing code bundle and split chunk so we cannot introduce variable in the import thus we create this redirecting file*/
        export async function getWebpackClassName(path, classname) {
            if (path === "@root/modules/ammo/AmmoPhysics" && classname === "Factory") {
        let module = await import("@root/modules/ammo/AmmoPhysics");
        return module.Factory.name;
    } else if (path === "@root/modules/controller/cameraController/OrbitController" && classname === "Factory") {
        let module = await import("@root/modules/controller/cameraController/OrbitController");
        return module.Factory.name;
    } else if (path === "@root/modules/controller/pathFindingPlayer/Input" && classname === "Factory") {
        let module = await import("@root/modules/controller/pathFindingPlayer/Input");
        return module.Factory.name;
    } else if (path === "@root/modules/controller/pathFindingPlayer/NavMeshPlayer" && classname === "Factory") {
        let module = await import("@root/modules/controller/pathFindingPlayer/NavMeshPlayer");
        return module.Factory.name;
    } else if (path === "@root/modules/controller/physicPlayerControl/Input" && classname === "Factory") {
        let module = await import("@root/modules/controller/physicPlayerControl/Input");
        return module.Factory.name;
    } else if (path === "@root/modules/controller/physicPlayerControl/PlayerControls" && classname === "Factory") {
        let module = await import("@root/modules/controller/physicPlayerControl/PlayerControls");
        return module.Factory.name;
    } else if (path === "@root/modules/controller/PlayerService" && classname === "Factory") {
        let module = await import("@root/modules/controller/PlayerService");
        return module.Factory.name;
    } else if (path === "@root/modules/core/WorldService" && classname === "Factory") {
        let module = await import("@root/modules/core/WorldService");
        return module.Factory.name;
    } else if (path === "@root/modules/debug/DebugBtn" && classname === "Factory") {
        let module = await import("@root/modules/debug/DebugBtn");
        return module.Factory.name;
    } else if (path === "@root/modules/debug/PerformanceStats" && classname === "Factory") {
        let module = await import("@root/modules/debug/PerformanceStats");
        return module.Factory.name;
    } else if (path === "@root/modules/FrameLoop" && classname === "Factory") {
        let module = await import("@root/modules/FrameLoop");
        return module.Factory.name;
    } else if (path === "@root/modules/portals/PortalLink" && classname === "Factory") {
        let module = await import("@root/modules/portals/PortalLink");
        return module.Factory.name;
    } else if (path === "@root/modules/portals/PortalsService" && classname === "Factory") {
        let module = await import("@root/modules/portals/PortalsService");
        return module.Factory.name;
    } else if (path === "@root/modules/scenes/demo1/GLTFScene" && classname === "Factory") {
        let module = await import("@root/modules/scenes/demo1/GLTFScene");
        return module.Factory.name;
    } else if (path === "@root/modules/scenes/demo2/LevelSetup" && classname === "Factory") {
        let module = await import("@root/modules/scenes/demo2/LevelSetup");
        return module.Factory.name;
    } else if (path === "@root/modules/scenes/demo2/Sky2" && classname === "Factory") {
        let module = await import("@root/modules/scenes/demo2/Sky2");
        return module.Factory.name;
    } else if (path === "@root/modules/spoke/SpokeRoomLoader" && classname === "Factory") {
        let module = await import("@root/modules/spoke/SpokeRoomLoader");
        return module.Factory.name;
    } else if (path === "@root/modules/three/ThreeLib" && classname === "Factory") {
        let module = await import("@root/modules/three/ThreeLib");
        return module.Factory.name;
    } else  {
                throw new Error("Class Not Found");
            }
        }